/* Generated By:JavaCC: Do not edit this line. SimpleCConstants.java */
package simplec.parse;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SimpleCConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PRAGMA = 9;
  /** RegularExpression Id. */
  int VOID = 10;
  /** RegularExpression Id. */
  int LONG = 11;
  /** RegularExpression Id. */
  int LONG_STAR = 12;
  /** RegularExpression Id. */
  int CHAR = 13;
  /** RegularExpression Id. */
  int CHAR_STAR = 14;
  /** RegularExpression Id. */
  int CHAR_STAR_STAR = 15;
  /** RegularExpression Id. */
  int DOUBLE = 16;
  /** RegularExpression Id. */
  int DOUBLE_STAR = 17;
  /** RegularExpression Id. */
  int IF = 18;
  /** RegularExpression Id. */
  int ELSE = 19;
  /** RegularExpression Id. */
  int DO = 20;
  /** RegularExpression Id. */
  int WHILE = 21;
  /** RegularExpression Id. */
  int FOR = 22;
  /** RegularExpression Id. */
  int CONTINUE = 23;
  /** RegularExpression Id. */
  int BREAK = 24;
  /** RegularExpression Id. */
  int RETURN = 25;
  /** RegularExpression Id. */
  int ADD = 26;
  /** RegularExpression Id. */
  int MIN = 27;
  /** RegularExpression Id. */
  int MUL = 28;
  /** RegularExpression Id. */
  int DIV = 29;
  /** RegularExpression Id. */
  int MOD = 30;
  /** RegularExpression Id. */
  int EQUAL = 31;
  /** RegularExpression Id. */
  int AMP = 32;
  /** RegularExpression Id. */
  int AMPAMP = 33;
  /** RegularExpression Id. */
  int OROR = 34;
  /** RegularExpression Id. */
  int EQUALEQUAL = 35;
  /** RegularExpression Id. */
  int NOTEQUAL = 36;
  /** RegularExpression Id. */
  int GREATEQUAL = 37;
  /** RegularExpression Id. */
  int LESSEQUAL = 38;
  /** RegularExpression Id. */
  int COMMA = 39;
  /** RegularExpression Id. */
  int SEMICOLON = 40;
  /** RegularExpression Id. */
  int LPAREN = 41;
  /** RegularExpression Id. */
  int RPAREN = 42;
  /** RegularExpression Id. */
  int LBRACK = 43;
  /** RegularExpression Id. */
  int RBRACK = 44;
  /** RegularExpression Id. */
  int LCURLY = 45;
  /** RegularExpression Id. */
  int RCURLY = 46;
  /** RegularExpression Id. */
  int LANGLE = 47;
  /** RegularExpression Id. */
  int RANGLE = 48;
  /** RegularExpression Id. */
  int ID = 49;
  /** RegularExpression Id. */
  int C_CONST = 50;
  /** RegularExpression Id. */
  int STR_CONST = 51;
  /** RegularExpression Id. */
  int INT_CONST = 52;
  /** RegularExpression Id. */
  int DOUBLE_CONST = 53;
  /** RegularExpression Id. */
  int DEC = 54;
  /** RegularExpression Id. */
  int PRINT = 55;
  /** RegularExpression Id. */
  int OCT = 56;
  /** RegularExpression Id. */
  int HEX = 57;
  /** RegularExpression Id. */
  int LET = 58;
  /** RegularExpression Id. */
  int OTHER = 59;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int ML_COMMENT_STATE = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 8>",
    "<PRAGMA>",
    "\"void\"",
    "\"long\"",
    "\"long*\"",
    "\"char\"",
    "\"char*\"",
    "\"char**\"",
    "\"double\"",
    "\"double*\"",
    "\"if\"",
    "\"else\"",
    "\"do\"",
    "\"while\"",
    "\"for\"",
    "\"continue\"",
    "\"break\"",
    "\"return\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"=\"",
    "\"&\"",
    "\"&&\"",
    "\"||\"",
    "\"==\"",
    "\"!=\"",
    "\">=\"",
    "\"<=\"",
    "\",\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"<\"",
    "\">\"",
    "<ID>",
    "<C_CONST>",
    "<STR_CONST>",
    "<INT_CONST>",
    "<DOUBLE_CONST>",
    "<DEC>",
    "<PRINT>",
    "<OCT>",
    "<HEX>",
    "<LET>",
    "<OTHER>",
  };

}
